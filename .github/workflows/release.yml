name: Electron Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  # Job 1: Create Release Draft
  create-release:
    name: Create Release Draft
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Peptide Screener ${{ steps.version.outputs.version }}
          draft: true
          prerelease: false
          body: |
            ## Changes in this Release
            
            ### Features
            - Comprehensive peptide analysis with 770+ peptides
            - Advanced filtering and search capabilities
            - Export functionality for analysis results
            - Cross-platform compatibility (Windows, macOS, Linux)
            
            ### Technical Improvements
            - Enhanced error handling and user experience
            - Optimized performance with code splitting
            - Improved loading states and progress indicators
            
            ### Installation
            
            **Windows**: Download `Peptide-Analyzer-Setup-${{ steps.version.outputs.version }}.exe`
            **macOS**: Download `Peptide-Analyzer-${{ steps.version.outputs.version }}.dmg`
            **Linux**: Download `Peptide-Analyzer-${{ steps.version.outputs.version }}.AppImage`
            
            ### System Requirements
            - Windows 10 or later / macOS 10.14 or later / Ubuntu 18.04 or later
            - 4GB RAM minimum, 8GB recommended
            - 500MB free disk space

  # Job 2: Build for Multiple Platforms
  build-electron:
    name: Build Electron App
    needs: create-release
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libnotify-dev libnss3-dev libxss1 libxtst6 xvfb libatspi2.0-0 libgconf-2-4 libxrandr2 libasound2-dev libpangocairo-1.0-0 libatk1.0-0 libcairo-gobject2 libgtk-3-0 libgdk-pixbuf2.0-0
          
      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run electron:build -- --mac
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
          
      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run electron:build -- --win
        
      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run electron:build -- --linux
        
      - name: List build outputs
        run: ls -la dist_electron/
        
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist_electron/Peptide Analyzer-*.dmg
          asset_name: Peptide-Analyzer-${{ github.ref_name }}.dmg
          asset_content_type: application/octet-stream
          
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist_electron/Peptide Analyzer Setup *.exe
          asset_name: Peptide-Analyzer-Setup-${{ github.ref_name }}.exe
          asset_content_type: application/octet-stream
          
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist_electron/Peptide Analyzer-*.AppImage
          asset_name: Peptide-Analyzer-${{ github.ref_name }}.AppImage
          asset_content_type: application/octet-stream

  # Job 3: Publish Release
  publish-release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: [create-release, build-electron]
    
    steps:
      - name: Publish Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ needs.create-release.outputs.release_id }},
              draft: false
            });